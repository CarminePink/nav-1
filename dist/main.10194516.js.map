{"version":3,"sources":["main.js"],"names":["$siteList","$","$lastLi","find","x","localStorage","getItem","xObject","JSON","parse","hashMap","logo","url","simplifyUrl","replace","render","remove","forEach","node","index","console","log","$li","insertBefore","on","window","open","e","stopPropagation","splice","prompt","indexOf","push","onbeforeunload","string","stringify","setItem","document","key","i","length","toLowerCase"],"mappings":"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","file":"main.10194516.js","sourceRoot":"..\\src","sourcesContent":["const $siteList = $(\".siteList\"); //找到包含所有网址的那个元素\r\nconst $lastLi = $siteList.find(\"li.last\"); //找到新增网址那个元素\r\nconst x = localStorage.getItem(\"x\");\r\nconst xObject = JSON.parse(x);\r\nconst hashMap = xObject || [\r\n  //用一个哈希表把每个网址元素放进去\r\n  { logo: \"A\", url: \"https://www.acfun.cn\" },\r\n  {\r\n    logo: \"B\",\r\n    url: \"https://www.bilibili.com\"\r\n  }\r\n];\r\n\r\nconst simplifyUrl = url => {\r\n  //简化网址名称(URL)\r\n  return url\r\n    .replace(\"https://\", \"\")\r\n    .replace(\"http://\", \"\")\r\n    .replace(\"www.\", \"\")\r\n    .replace(/\\/.*/, \"\"); // 删除 / 开头的内容\r\n};\r\nfunction render() {\r\n  //然后对哈希表进行渲染(把每个网址元素插入到新增元素之前)\r\n  //渲染前得把除了新增元素的所有元素都给删了，不然就会重复渲染\r\n  $siteList.find(\"li:not(.last)\").remove();\r\n  hashMap.forEach((node, index) => {\r\n    console.log(index);\r\n    const $li = $(`<li>\r\n        <div class=\"site\">\r\n            <div class=\"logo\">${node.logo}</div>\r\n            <div class=\"link\">${simplifyUrl(node.url)}</div>\r\n             <div class=\"close\">\r\n                <svg class=\"icon\">\r\n                    <use xlink:href=\"#icon-close1\"></use>\r\n                </svg>\r\n            </div>\r\n        </div>\r\n    </li>`).insertBefore($lastLi);\r\n    $li.on(\"click\", () => {\r\n      window.open(node.url);\r\n    });\r\n    $li.on(\"click\", \".close\", e => {\r\n      console.log(\"close按钮\");\r\n      e.stopPropagation(); //阻止冒泡，点击close按钮时不会被认为点击了整个网址\r\n      hashMap.splice(index, 1);\r\n      render();\r\n    });\r\n  });\r\n}\r\nrender();\r\n\r\n$(\".addButton\").on(\"click\", () => {\r\n  let url = window.prompt(\"请输入你要添加的网址是？\");\r\n  if (url.indexOf(\"http\") !== 0) {\r\n    url = \"https://\" + url;\r\n  }\r\n  console.log(url);\r\n\r\n  hashMap.push({\r\n    //创建的那个网址就会被插入到哈希表中\r\n    logo: simplifyUrl(url)[0],\r\n    url: url\r\n  });\r\n  render();\r\n});\r\n\r\nwindow.onbeforeunload = () => {\r\n  //当窗口即将被卸载（关闭）时,会触发该事件.\r\n  console.log(\"页面要关闭了\");\r\n  const string = JSON.stringify(hashMap); //先把哈希表对象转换成字符串\r\n  localStorage.setItem(\"x\", string); //再把哈希表的内容存在localStorage里面，用变量x表示\r\n};\r\n\r\n$(document).on(\"keypress\", e => {\r\n  //console.log(e.key);\r\n  const { key } = e;\r\n  for (let i = 0; i < hashMap.length; i++) {\r\n    if (hashMap[i].logo.toLowerCase() === key) {\r\n      window.open(hashMap[i].url);\r\n    }\r\n  }\r\n});\r\n\r\n//阻止input里的输入的键盘触发事件也能打开对应的网址，用到了阻止冒泡\r\n$(document).on(\"keypress\", \".inputComment\", e => {\r\n  e.stopPropagation();\r\n});\r\n"]}